--Tạo Schema
alter session set "_ORACLE_SCRIPT"=true;
CREATE USER QLYPHONGGYM IDENTIFIED BY pass123;
GRANT CONNECT, RESOURCE, DBA TO QLYPHONGGYM;


--Sử dụng Schema
ALTER SESSION SET CURRENT_SCHEMA = QLYPHONGGYM;
-- Bảng KHACHHANG
CREATE TABLE KHACHHANG (
    MaKH VARCHAR2(10) PRIMARY KEY,
    HoTen VARCHAR2(50) NOT NULL,
    NgaySinh DATE,
    GioiTinh VARCHAR2(10),
    Email VARCHAR2(50) NOT NULL,
    SoDienThoai VARCHAR2(15),
    DiaChi VARCHAR2(100),
    ReferralCode VARCHAR2(20) UNIQUE
);

-- Create NHANVIEN table
CREATE TABLE NHANVIEN (
    MaNV VARCHAR2(10) PRIMARY KEY,
    TenNV VARCHAR2(50) NOT NULL,
    NgaySinh DATE,
    GioiTinh VARCHAR2(10),
    Email VARCHAR2(30) NOT NULL,
    NgayVaoLam DATE,
    LoaiNV VARCHAR2(10) CHECK (LoaiNV IN ('Trainer', 'LeTan', 'QuanLy', 'PhongTap'))
);

-- Create KHIEUNAI table
CREATE TABLE KHIEUNAI (
    MaKN VARCHAR2(10) PRIMARY KEY,
    MaKH VARCHAR2(10),
    NoiDung VARCHAR2(500),
    CONSTRAINT FK_KHIEUNAI_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH)
);

-- Create BOMON table
CREATE TABLE BOMON (
    MaBM VARCHAR2(10) PRIMARY KEY,
    TenBM VARCHAR2(20) NOT NULL
);

-- Create DICHVU table
CREATE TABLE DICHVU (
    MaDV VARCHAR2(10) PRIMARY KEY,
    TenDV VARCHAR2(50) NOT NULL,
    LoaiDV VARCHAR2(10) CHECK (LoaiDV IN ('TuDo', 'Lop', 'PT')),
    ThoiHan NUMBER,
    DonGia NUMBER,
    MaBM VARCHAR2(10),
    CONSTRAINT FK_DICHVU_BOMON FOREIGN KEY (MaBM) REFERENCES BOMON(MaBM)
);
ALTER TABLE DICHVU ADD version NUMBER DEFAULT 0;

-- Create KHUVUC table
CREATE TABLE KHUVUC (
    MaKV VARCHAR2(10) PRIMARY KEY,
    TenKhuVuc VARCHAR2(20) NOT NULL,
    SucChuaToiDa NUMBER,
    TrangThai VARCHAR2(10) CHECK (TrangThai IN ('HoatDong', 'BaoTri')),
    TinhTrang VARCHAR2(10) CHECK (TinhTrang IN ('ChuaDay', 'DaDay')),
    MaBM VARCHAR2(10),
    CONSTRAINT FK_KHUVUC_BOMON FOREIGN KEY (MaBM) REFERENCES BOMON(MaBM)
);

-- Create CT_CHECKIN_OUT table
CREATE TABLE CT_CHECKIN_OUT (
    MaKH VARCHAR2(10),
    MaKV VARCHAR2(10),
    TG_IN DATE,
    TG_OUT DATE,
    CONSTRAINT PK_CT_CHECKIN_OUT PRIMARY KEY (MaKH, MaKV),
    CONSTRAINT FK_CHECKIN_OUT_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH),
    CONSTRAINT FK_CHECKIN_OUT_KHUVUC FOREIGN KEY (MaKV) REFERENCES KHUVUC(MaKV)
);

-- Create LOAITHIETBI table
CREATE TABLE LOAITHIETBI (
    MaLoaiTB VARCHAR2(10) PRIMARY KEY,
    TenLoaiTB VARCHAR2(20) NOT NULL,
    GiaNhap NUMBER,
    SL_Nhap NUMBER CHECK (SL_Nhap >= 0),
    SL_Kho NUMBER CHECK (SL_Kho >= 0),
    MucDich VARCHAR2(10) CHECK (MucDich IN ('ChoThue', 'LapDat'))
);

-- Create THIETBI table
CREATE TABLE THIETBI (
    MaTB VARCHAR2(10) PRIMARY KEY,
    TenTB VARCHAR2(20) NOT NULL,
    DVT VARCHAR2(10) CHECK (DVT IN ('Doi', 'Chiec', 'May')) NOT NULL,
    TinhTrang VARCHAR2(20) CHECK (TinhTrang IN ('Hu', 'DangBaoTri', 'DangSuDung')),
    DonGia NUMBER,
    MoTa VARCHAR2(100),
    MaLoaiTB VARCHAR2(10),
    MaKV VARCHAR2(10),
    CONSTRAINT FK_THIETBI_LOAITHIETBI FOREIGN KEY (MaLoaiTB) REFERENCES LOAITHIETBI(MaLoaiTB),
    CONSTRAINT FK_THIETBI_KHUVUC FOREIGN KEY (MaKV) REFERENCES KHUVUC(MaKV)
);

-- Create CT_CHUYENMON table
CREATE TABLE CT_CHUYENMON (
    MaNV VARCHAR2(10),
    MaBM VARCHAR2(10),
    GhiChu VARCHAR2(50),
    CONSTRAINT PK_CT_CHUYENMON PRIMARY KEY (MaNV, MaBM),
    CONSTRAINT FK_CHUYENMON_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV),
    CONSTRAINT FK_CHUYENMON_BOMON FOREIGN KEY (MaBM) REFERENCES BOMON(MaBM)
);

-- Create LOP table
CREATE TABLE LOP (
    MaLop VARCHAR2(10) PRIMARY KEY,
    TenLop VARCHAR2(30) NOT NULL,
    MoTa VARCHAR2(100),
    SL_ToiDa NUMBER,
    TinhTrang VARCHAR2(10) CHECK (TinhTrang IN ('ChuaDay', 'DaDay')),
    NgayBD DATE,
    GhiChu VARCHAR2(50),
    MaBM VARCHAR2(10),
    MaNV VARCHAR2(10),
    CONSTRAINT FK_LOP_BOMON FOREIGN KEY (MaBM) REFERENCES BOMON(MaBM),
    CONSTRAINT FK_LOP_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV)
);


-- Create VOUCHER table
CREATE TABLE VOUCHER (
    MaVC VARCHAR2(10) PRIMARY KEY,
    TenVC VARCHAR2(30) NOT NULL,
    GiaTri NUMBER NOT NULL,
    ThoiHan NUMBER
);

-- Create CHUONGTRINHUUDAI table
CREATE TABLE CHUONGTRINHUUDAI (
    MaCT VARCHAR2(10) PRIMARY KEY,
    TenCT VARCHAR2(50) NOT NULL,
    MoTa VARCHAR2(100),
    NgayBD DATE,
    NgayKT DATE,
    MaVC VARCHAR2(10),
    CONSTRAINT FK_CHUONGTRINHUUDAI_VOUCHER FOREIGN KEY (MaVC) REFERENCES VOUCHER(MaVC)
);

-- Create CT_THAMGIA table
CREATE TABLE CT_THAMGIA (
    MaKH VARCHAR2(10),
    MaCT VARCHAR2(10),
    NgayHT DATE,
    CONSTRAINT PK_CT_THAMGIA PRIMARY KEY (MaKH, MaCT),
    CONSTRAINT FK_THAMGIA_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH),
    CONSTRAINT FK_THAMGIA_CHUONGTRINH FOREIGN KEY (MaCT) REFERENCES CHUONGTRINHUUDAI(MaCT)
);


-- Create HOADON table
CREATE TABLE HOADON (
    MaHD VARCHAR2(10) PRIMARY KEY,
    TongTien NUMBER DEFAULT 0,
    NgayLap DATE,
    TrangThai VARCHAR2(50) CHECK (TrangThai IN ('ChuaThanhToan', 'DaThanhToan')),
    NgayTT DATE,
    MaKH VARCHAR2(10),
    CONSTRAINT FK_HOADON_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH)
);
ALTER TABLE HOADON MODIFY NgayLap DATE DEFAULT SYSDATE;

-- Create KH_VC table
CREATE TABLE KH_VC (
    MaCap VARCHAR2(10) PRIMARY KEY,
    NgayNhan DATE,
    NgayHetHan DATE,
    MaKH VARCHAR2(10),
    MaVC VARCHAR2(10),
    MaHD VARCHAR2(10),
    CONSTRAINT FK_KH_VC_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH),
    CONSTRAINT FK_KH_VC_VOUCHER FOREIGN KEY (MaVC) REFERENCES VOUCHER(MaVC),
    CONSTRAINT FK_KH_VC_HOADON FOREIGN KEY (MaHD) REFERENCES HOADON(MaHD)
);

-- Create CT_DKDV table
CREATE TABLE CT_DKDV (
    MaCTDK VARCHAR2(10) PRIMARY KEY,
    NgayBD DATE,
    NgayKT DATE,
    MaHD VARCHAR2(10),
    MaDV VARCHAR2(10),
    MaLop VARCHAR2(10),
    MaNV VARCHAR2(10),
    CONSTRAINT FK_CT_DKDV_HOADON FOREIGN KEY (MaHD) REFERENCES HOADON(MaHD),
    CONSTRAINT FK_CT_DKDV_DICHVU FOREIGN KEY (MaDV) REFERENCES DICHVU(MaDV),
    CONSTRAINT FK_CT_DKDV_LOP FOREIGN KEY (MaLop) REFERENCES LOP(MaLop),
    CONSTRAINT FK_CT_DKDV_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV)
);

-- Create CT_THUEDC table
CREATE TABLE CT_THUEDC (
    MaHD VARCHAR2(10),
    MaTB VARCHAR2(10),
    SL NUMBER,
    ThoiGianThue DATE,
    ThoiGianTra DATE,
    ThanhTien NUMBER,
    CONSTRAINT PK_CT_THUEDC PRIMARY KEY (MaHD, MaTB),
    CONSTRAINT FK_THUEDC_HOADON FOREIGN KEY (MaHD) REFERENCES HOADON(MaHD),
    CONSTRAINT FK_THUEDC_THIETBI FOREIGN KEY (MaTB) REFERENCES THIETBI(MaTB)
);

-- Create CATAP table
CREATE TABLE CATAP (
    MaCa VARCHAR2(10) PRIMARY KEY,
    TenCa VARCHAR2(10),
    MoTa VARCHAR2(50)
);

-- Create LICHTAP table
CREATE TABLE LICHTAP (
    MaLT VARCHAR2(10) PRIMARY KEY,
    LoaiLich VARCHAR2(10) CHECK (LoaiLich IN ('Lop', 'PT')),
    NgayTap DATE,
    TrangThai VARCHAR2(20) CHECK (TrangThai IN ('Sap dien ra', 'Hoan thanh', 'Huy', 'Hoan')),
    Ca VARCHAR2(10),
    MaKH VARCHAR2(10),
    MaNV VARCHAR2(10),
    MaLop VARCHAR2(10),
    CONSTRAINT FK_LICHTAP_CATAP FOREIGN KEY (Ca) REFERENCES CATAP(MaCa),
    CONSTRAINT FK_LICHTAP_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH),
    CONSTRAINT FK_LICHTAP_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV),
    CONSTRAINT FK_LICHTAP_LOP FOREIGN KEY (MaLop) REFERENCES LOP(MaLop)
);

-- Create LICHLAMVIEC table
CREATE TABLE LICHLAMVIEC (
    MaLLV VARCHAR2(10) PRIMARY KEY,
    NgayLam DATE,
    DiemDanh VARCHAR2(10) CHECK (DiemDanh IN ('DaLam', 'ChuaLam', 'Vang')),
    Ca VARCHAR2(10),
    MaNV VARCHAR2(10),
    CONSTRAINT FK_LICHLAMVIEC_CATAP FOREIGN KEY (Ca) REFERENCES CATAP(MaCa),
    CONSTRAINT FK_LICHLAMVIEC_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV)
);

-- Create LUONG table
CREATE TABLE LUONG (
    MaLuong VARCHAR2(10) PRIMARY KEY,
    LuongCung NUMBER NOT NULL,
    HoaHong NUMBER,
    LuongThuong NUMBER,
    Phat NUMBER,
    TongLuong NUMBER,
    NgayNhan DATE,
    MaNV VARCHAR2(10),
    CONSTRAINT FK_LUONG_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV)
);
-- Create PHIEUBAOTRI table
CREATE TABLE PHIEUBAOTRI (
    MaPBT VARCHAR2(10) PRIMARY KEY,
    NgayLap DATE,
    NgayBaoTri DATE,
    MaNV VARCHAR2(10),
    MaTB VARCHAR2(10),
    CONSTRAINT FK_PHIEUBAOTRI_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV),
    CONSTRAINT FK_PHIEUBAOTRI_THIETBI FOREIGN KEY (MaTB) REFERENCES THIETBI(MaTB)
);


-- 1. Tạo bảng ROLE_GROUP
CREATE TABLE ROLE_GROUP (
    ROLE_GROUP_ID NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME_ROLE_GROUP VARCHAR2(100) NOT NULL,
    CREATED_AT DATE DEFAULT SYSDATE,
    UPDATED_AT DATE DEFAULT SYSDATE,
    IS_DELETED NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1))
);

-- 2. Tạo bảng ACCOUNT
CREATE TABLE ACCOUNT (
    ACCOUNT_ID    NUMBER(10)  GENERATED BY DEFAULT AS IDENTITY primary key,
    ROLE_GROUP_ID NUMBER(10),
    MaKH VARCHAR2(10),
    MaNV VARCHAR2(10),
    USERNAME      VARCHAR2(50)  NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR2(200) NOT NULL,
    STATUS        VARCHAR2(20)  DEFAULT 'ACTIVE',
    CREATED_AT    DATE          DEFAULT SYSDATE,
    UPDATED_AT    DATE          DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1)     DEFAULT 0 CHECK (IS_DELETED IN (0, 1)),
    CONSTRAINT FK_ACCOUNT_ROLE_GROUP FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP(ROLE_GROUP_ID),
    CONSTRAINT FK_ACCOUNT_KHACHHANG FOREIGN KEY (MaKH) REFERENCES KHACHHANG(MaKH),
    CONSTRAINT FK_ACCOUNT_NHANVIEN FOREIGN KEY (MaNV) REFERENCES NHANVIEN(MaNV),
    CONSTRAINT CHK_ONE_REFERENCE CHECK (
        (MaKH IS NOT NULL AND MaNV IS NULL) OR
        (MaKH IS NULL AND MaNV IS NOT NULL) OR
        (MaKH IS NULL AND MaNV IS NULL)
    )
);

-- 3. Tạo bảng FUNCTION
CREATE TABLE FUNCTION (
    FUNCTION_ID   NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME_FUNCTION VARCHAR2(100) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1))
);

-- 4. Tạo bảng ROLE
CREATE TABLE ROLE (
    ROLE_ID     NUMBER(10) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FUNCTION_ID NUMBER(10) NOT NULL,
    ADD_PERM    NUMBER(1) DEFAULT 0 CHECK (ADD_PERM IN (0,1)),
    EDIT_PERM   NUMBER(1) DEFAULT 0 CHECK (EDIT_PERM IN (0,1)),
    DELETE_PERM NUMBER(1) DEFAULT 0 CHECK (DELETE_PERM IN (0,1)),
    DOWNLOAD_PERM NUMBER(1) DEFAULT 0 CHECK (DOWNLOAD_PERM IN (0,1)),
    VIEW_PERM   NUMBER(1) DEFAULT 0 CHECK (VIEW_PERM IN (0,1)),
    CREATED_AT  DATE DEFAULT SYSDATE,
    UPDATED_AT  DATE DEFAULT SYSDATE,
    IS_DELETED  NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT FK_ROLE_FUNCTION FOREIGN KEY (FUNCTION_ID) REFERENCES FUNCTION(FUNCTION_ID)
);

-- 5. Tạo bảng ROLE_GROUP_ASSIGN_ROLE
CREATE TABLE ROLE_GROUP_ASSIGN_ROLE (
    ROLE_GROUP_ID NUMBER(10) NOT NULL,
    ROLE_ID       NUMBER(10) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ROLE_GROUP_ASSIGN_ROLE PRIMARY KEY (ROLE_GROUP_ID, ROLE_ID),
    CONSTRAINT FK_ROLE_GROUP FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP(ROLE_GROUP_ID),
    CONSTRAINT FK_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);
-- 6. Tạo bảng ACCOUNT_ASSIGN_ROLE_GROUP
CREATE TABLE ACCOUNT_ASSIGN_ROLE_GROUP (
    ACCOUNT_ID    NUMBER(10) NOT NULL,
    ROLE_GROUP_ID NUMBER(10) NOT NULL,
    CREATED_AT    DATE DEFAULT SYSDATE,
    UPDATED_AT    DATE DEFAULT SYSDATE,
    IS_DELETED    NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ACCOUNT_ASSIGN_ROLE_GROUP PRIMARY KEY (ACCOUNT_ID, ROLE_GROUP_ID),
    CONSTRAINT FK_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ROLE_GROUP_ASSIGN FOREIGN KEY (ROLE_GROUP_ID) REFERENCES ROLE_GROUP(ROLE_GROUP_ID)
);

-- 7. Tạo bảng ACCOUNT_ASSIGN_ROLE
CREATE TABLE ACCOUNT_ASSIGN_ROLE (
    ACCOUNT_ID  NUMBER(10) NOT NULL,
    ROLE_ID     NUMBER(10) NOT NULL,
    CREATED_AT  DATE DEFAULT SYSDATE,
    UPDATED_AT  DATE DEFAULT SYSDATE,
    IS_DELETED  NUMBER(1) DEFAULT 0 CHECK (IS_DELETED IN (0,1)),
    CONSTRAINT PK_ACCOUNT_ASSIGN_ROLE PRIMARY KEY (ACCOUNT_ID, ROLE_ID),
    CONSTRAINT FK_ACCOUNT_ROLE FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID),
    CONSTRAINT FK_ROLE_ASSIGN FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

-- 8. Tạo bảng ACCOUNT_TOKEN
CREATE TABLE ACCOUNT_TOKEN (
    TOKEN_ID      NUMBER(20) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ACCOUNT_ID    NUMBER(10) NOT NULL,
    TOKEN_VALUE   VARCHAR2(500) UNIQUE NOT NULL,
    EXPIRES_AT    DATE NOT NULL,
    ISSUED_AT     DATE DEFAULT SYSDATE,
    IS_REVOKED    CHAR(1) DEFAULT 'N' CHECK (IS_REVOKED IN ('Y', 'N')),
    CONSTRAINT FK_TOKEN_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ACCOUNT_ID)
);
